# -*- coding: utf-8 -*-
"""TokenTaskAutomation

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1soWfoR1PcxNOwlZMJ-_OvIlC7aR6Cgoi
"""

# import
from google.colab import files
import pandas as pd
import numpy as np

# function definitions
def upload_and_load_dataframe(message):
    print(message)
    upload = files.upload()
    file = next(iter(upload))
    df = pd.read_excel(file)
    return file, df

def convert_to_xlsx(df):
  df['Instant debit amount'].fillna('', inplace=True)
  columns_to_convert = ['Card_Number', 'Instant debit amount', 'Payment gateway response code']
  df[columns_to_convert] = df[columns_to_convert].astype(str)

  return df

def newcardtoken_convert(df2,df3):

  df3['External Pledge Reference Id'] = df2['Pledge ID']
  df3['First_Name'] = df2['First Name']
  df3['Last_Name'] = df2['Last Name']
  df3['Card_Number'] = df2['PAN 16/15 digits']
  df3['Expiry Date'] = df2['Expiry Date MM/YY format']
  df3['CardHolder Name'] = df2['CardHolder Name']

  dummy_data = {
      'Donation Date' : '12/01/2023',
      'Donation Amount' : '60',
      'Email' : 'joharisuleiman87@gmail.com',
      'Mobile_Phone' : '017-3316286',
      'Location' : 'Mydin Subang Jaya',
      'Office Name' : 'KL Office 1',
      'Fundraiser full name' : 'Malliga A/P Munusamy',
      'Team Leader' : 'Malliga A/P Munusamy',
      'Campaign Manager' : 'Mohamad Syukran Bin Anuar',
      'Supporter Payment method' : 'Credit Card',
      'Credit Card Type' : 'VS',
      'Payment Type' : 'VS',
      'Instant debit amount' : '',
      'Successful instant debit' : 'No',
      'Payment gateway message' : 'Insufficient funds in the account',
      'Payment gateway response code' : '204',
      'Reconciliation ID' : ''
    }

  for column_name, value in dummy_data.items():
    df3.loc[0:, column_name] = value

  df3.fillna('', inplace=True)

  # change data type
  columns_to_convert2 = ['Card_Number']
  df3[columns_to_convert2] = df3[columns_to_convert2].astype(str)
  columns_to_convert3 = ['Donation Amount']
  df3[columns_to_convert3] = df3[columns_to_convert3].astype(int)

  return df3

def change_card_type(df3):
  conditions = [
      df3['Card_Number'].str.startswith('4'),
      df3['Card_Number'].str.startswith('5'),
      df3['Card_Number'].str.startswith('3')
  ]
  choices = ['VS', 'MC', 'AX']

  df3['Credit Card Type'] = np.select(conditions, choices, default = '')
  df3['Payment Type'] = df3['Credit Card Type']

  return df3

def export_to_excel(df,output_filename):
  df.to_excel(output_filename, index=False)
  files.download(output_filename)

# main function
def main():
  # Upload and load the main file
  convert_file, df = upload_and_load_dataframe('Upload file to convert to .xlsx')
  token_file, df2 = upload_and_load_dataframe('Upload New Token file')
  guide_file, df3 = upload_and_load_dataframe('Upload guide file')

  # apply changes
  converted_df = convert_to_xlsx(df)
  df3 = newcardtoken_convert(df2, df3)
  df3 = change_card_type(df3)

  # naming the file
  converted_filename = convert_file.split('.')[0] + '.xlsx'
  to_token_filename = f'{token_file.split(".")[0]} - To Token.xlsx'

  # export
  export_to_excel(converted_df, converted_filename)
  export_to_excel(df3, to_token_filename)


if __name__ == "__main__":
  main()